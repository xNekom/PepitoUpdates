name: Check Pepito Status

on:
  schedule:
    # Ejecutar cada 2 minutos
    - cron: '*/2 * * * *'
  workflow_dispatch: # Permitir ejecuci√≥n manual

jobs:
  check-pepito-status:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check Pepito Status
      run: |
        echo "üîÑ Verificando estado de P√©pito..."

        # URL de la Edge Function de Supabase (reemplaza con tu URL real)
        EDGE_FUNCTION_URL="${{ secrets.SUPABASE_EDGE_FUNCTION_URL }}"

        if [ -z "$EDGE_FUNCTION_URL" ]; then
          echo "‚ùå Error: SUPABASE_EDGE_FUNCTION_URL no est√° configurado en los secrets"
          exit 1
        fi

        # Hacer la petici√≥n a la Edge Function
        response=$(curl -s -w "\n%{http_code}" \
          -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.SUPABASE_ANON_KEY }}" \
          -H "X-From-GitHub-Actions: true" \
          "$EDGE_FUNCTION_URL")

        # Extraer el c√≥digo de estado HTTP (√∫ltima l√≠nea)
        http_code=$(echo "$response" | tail -n1)
        # Extraer el cuerpo de la respuesta (todo menos la √∫ltima l√≠nea)
        body=$(echo "$response" | head -n -1)

        echo "üì° C√≥digo de respuesta: $http_code"
        echo "üìÑ Respuesta: $body"

        if [ "$http_code" -eq 200 ]; then
          echo "‚úÖ Estado de P√©pito verificado exitosamente"

          # Parsear la respuesta JSON para mostrar informaci√≥n √∫til
          status=$(echo "$body" | jq -r '.status // "unknown"')
          description=$(echo "$body" | jq -r '.description // "Sin descripci√≥n"')
          inserted=$(echo "$body" | jq -r '.inserted // false')

          echo "üìä Estado: $status"
          echo "üìù Descripci√≥n: $description"
          echo "üíæ Insertado en BD: $inserted"
        else
          echo "‚ùå Error al verificar estado de P√©pito"
          echo "üîç Respuesta completa: $body"
          exit 1
        fi